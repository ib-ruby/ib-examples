#!/usr/bin/env ruby
#
# Gets the OptionChain of GE

require 'bundler/setup'
require 'ib-api'
require 'ib/verify'
require_relative 'config'

# First, connect to IB TWS and subscribe for events. 
ib = IB::Connection.new **Init.params  do | gw | 
	# Subscribe to TWS alerts/errors
	gw.subscribe(:Alert) { |msg| puts msg.to_human }
	# Set log level
	gw.logger.level = Logger::ERROR # DEBUG  # -- INFO -- WARN -- ERROR  -- FATAL
end

TheYear =  2023
TheStrike = 250
TheRight =  :put

# get expiries (last-trading-days)
the_contract =  IB::Option.new	symbol: 'MSFT',
																currency: 'USD',
																exchange: 'SMART',
																expiry: TheYear,
																strike: TheStrike,
																right: TheRight

puts
puts "Using #{the_contract.to_human}"
puts '*' * 85
puts "           get all available expiries"
puts '-' * 85
contracts = the_contract.verify.sort_by{|a| a.last_trading_day }
provided_expiries = contracts.map &:last_trading_day
	# last trading day: format yyyy-mm-dd
	# expiry: format yyyymmdd
puts "detected Expiries \n #{provided_expiries.join(" -- ")}"

puts '*' * 85
puts
puts "Analysing the third detected expiry"

  the_contract =  IB::Option.new symbol: 'GE', exchange: 'SMART', last_trading_day: provided_expiries[2], right: TheRight 
	puts  the_contract.to_human
	puts "Expiry: #{the_contract.expiry}"
  #puts "Strikes: #{ the_contract.verify.map( &:to_human).join " \n " } "
  puts "Strikes: "
  puts the_contract.verify.sort_by{|x| x.strike}.as_table


