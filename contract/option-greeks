#!/usr/bin/env ruby
#
# This script subscribes to market data for a list of Options and gathers Option-Greeks

require 'bundler/setup'
require 'ib/symbols'
require 'ib/verify'
require 'ib/option-greeks'
require_relative 'config'


# Definition of what we want market data for.
contracts = [ IB::Symbols::Options.ge,  IB::Symbols::Options.spy, IB::Symbols::Options.aapl]
# First, connect to IB TWS. 
ib = IB::Connection.new **Init.params  do | gw| 
  ## Subscribe to TWS alerts/errors
  gw.subscribe(:Alert, :ManagedAccounts) { |msg| puts msg.to_human }
  #  set the log level
  gw.logger.level = Logger::FATAL
end

#  ensure that the contracts are valid
contracts = contracts.map{|y| y.verify.first}.compact

th= contracts.map{ |x| x.request_greeks thread: true  }

# wait for all requests to finish
th.each{ |x| x.join }

# output of the results
#puts contracts.map{ |x| [x.to_human, x.greek.to_human].join " --> \n" }.join "\n"
puts contracts.map( &:greek ).as_table

puts "finished"
