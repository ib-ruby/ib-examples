#!/usr/bin/env ruby
#
# Subscribe to real time data for specific symbol from IB

require 'bundler/setup'
require 'ib/symbols'
require_relative 'config'

## list of contract with market-data permissions
contracts = [ IB::Symbols::Futures.stoxx.merge( symbol: 'CAC40', exchange: 'MONEP' ),
              IB::Symbols::Options.aapl,
              IB::Symbols::Forex[:gbpusd] ]
ids =  {}
# Connect to IB TWS.
ib = IB::Connection.new **Init.params  do | gw | 

	# Subscribe to TWS alerts/errors
	gw.subscribe(:Alert) { |msg| puts msg.to_human }

	# Subscribe to RealTimeBar incoming events. We have to use message request_id
	# to figure out what contract it's for.
	gw.subscribe(IB::Messages::Incoming::RealTimeBar) do |msg|
    puts ids[msg.request_id].symbol + ": #{msg.bar.to_human}"
	end
end
contracts.each do  | c |
  request_id = ib.send_message IB::Messages::Outgoing::RequestRealTimeBars.new(
                        contract: c,
                  #     bar_size: 5, # Only 5 secs bars supported  (hard coded in messages/outgoing/bar_requests)
                        data_type: :trades,	# possible values: :trades, :bid, :ask , :midpoint
                        use_rth:  false)
  ids[ request_id ] =  c 
end

# We use the generated Hash in the subscription part to distinguish between multible assets 

# So we need to interrupt manually when we do not want any more quotes.
puts "\n******** Press <Enter> to exit... *********\n\n"
STDIN.gets
