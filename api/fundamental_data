#!/usr/bin/env ruby
#
# This script downloads Fundamental data for specific symbols from IB
# This only works IF you have Reuters data subscription!

require 'bundler/setup'

require 'ib-api'

require 'yaml'


# read items from console.yml
read_yml = -> (key) do
		YAML::load_file( File.expand_path('../config.yml',__FILE__))[key]
end

client  =  read_yml[ :client_id ]
port    =  read_yml[ read_yml[ :product ] ]

# allocate two variables
request_id, snapshot_data  =  nil

ib = IB::Connection.new client_id: client , port: port do | gw |  # :port => 7497 # TWS
  gw.subscribe(:Alert) { |msg| puts msg.to_human }

  # Fundamental Data will arrive in XML format, we need to parse it
  gw.subscribe(:FundamentalData) { |msg| snapshot_data = msg.xml  if msg.request_id == request_id }
end

# Request Fundamental Data for IBM. Possible report types:
#     'estimates' - Estimates
#     'finstat'   - Financial statements
#     'snapshot' - Summary
contract = IB::Stock.new  symbol: 'ibm'

request_id = ib.send_message :RequestFundamentalData,
                :contract =>  contract,
                :report_type => 'snapshot'

# Needs some time to receive and parse XML. Standard timeout of 1 sec is just too low.
ib.wait_for  :FundamentalData , 5


if snapshot_data.nil?
  puts "No fundamental data received for , most probably due to missing subscriptions for #{contract.to_human} "

else
  puts
  puts  "*" * 50
  puts
  # Now just extract and use all the fundamental data you needed
  puts snapshot_data[:ReportSnapshot][:TextInfo][:Text]

  pp snapshot_data[:ReportSnapshot][:Ratios]

  puts
  puts  "*" * 50
  puts "press <return>"
  STDIN.gets
  puts
  puts "Displaying the complete transmitted dataset:"
  puts ""

  pp snapshot_data

end
