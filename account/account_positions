#!/usr/bin/env ruby
#
# This script connects to IB API and subscribes to  Position Values which are updated regularly

# TWS-data are collected in a Queue and processed after the TWS signaled :PositionDataEnd. 

require 'bundler/setup'
require 'ib-api'

require_relative 'config'

q =  Queue.new
out = ->(msg){ print '*'*50; print " #{msg} "; puts '*'*(50 - msg.size)}
ib = IB::Connection.new **Init.params do | gw |  
#
## Subcribe to forseable events before the connection is completed
## Subscribe to TWS alerts/errors
  gw.subscribe(:Alert ){ |msg| puts msg.to_human }
  gw.subscribe(:PositionData){ |msg|  q << msg  }
  gw.subscribe(:PositionDataEnd) do 
    ib.send_message :CancelPositions
    sleep 0.5
    q.close
  end
  gw.logger.level = Logger::FATAL # DEBUG  -- INFO -- WARN -- ERROR  -- FATAL
end
# request the  AccountSummary
#
ib.send_message :RequestPositions

out["start"]
#
##wait for data
while p = q.pop
  puts p.to_human
end

out["end"]


